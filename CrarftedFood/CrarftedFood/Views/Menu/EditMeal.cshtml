@using CrarftedFood.Extentions
@model Data.DTOs.MenuMealItem

@{
    ViewBag.Title = "EditMeal";
}

<h2>EditMeal</h2>


@{
    List<SelectListItem> units = Data.Enums.Units.grams.CreateSelectListItem();
    List<SelectListItem> categories = Data.Enums.Categories.bakery.CreateSelectListItem();
}

@using (Html.BeginForm("EditMeal", "Menu", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MenuMealItem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MealId)
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="unit" name="unit" class="tooltippable form-control" data-tooltip-text="Change unit" data-tooltip-direction="bottom">
                    @foreach (var unit in units)
                    {
                        <option value="@unit.Value"
                                @((int) Model.Unit == Int32.Parse(unit.Value) ? "selected" : "")>
                            @unit.Text
                        </option>
                    }
                </select>
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="category" name="category" class="tooltippable form-control" data-tooltip-text="Change category" data-tooltip-direction="bottom">
                    @foreach (var cat in categories)
                    {
                        <option value="@cat.Value"
                                @((int) Model.Category == Int32.Parse(cat.Value) ? "selected" : "")>
                            @cat.Text
                        </option>
                    }
                </select>
            </div>

        </div>




        <div class="form-group">
            <label class="control-label col-md-2" for="file">Image</label>
            <div class="col-md-10">
                <input type="file" name="file" id="file" /><br><br>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="update" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
