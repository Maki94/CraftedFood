@using CrarftedFood.Extentions
@model Data.DTOs.MenuMealItem

@{
    ViewBag.Title = "EditMeal";
}

@{
    List<SelectListItem> units = Data.Enums.Units.grams.CreateSelectListItem();
    List<SelectListItem> categories = Data.Enums.Categories.bakery.CreateSelectListItem();
}
<style>
    #form-wrapper {
        margin: 2% 5%;
        width: 60%;
        padding-top: 2%;
    }
    #submint-button {
        float: left;
    }
    #form-wrapper-horizontal {
        width: 130%;
    }
    #btn-file-wrapper {
        display: block;
    }
</style>
@using (Html.BeginForm("EditMeal", "Menu", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

        <div id="form-wrapper" class="table text-center mdl-data-table mdl-js-data-table mdl-data-table--selectable mdl-shadow--2dp">

            <div class="form-horizontal" id="form-wrapper-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.MealId)
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control expand-input" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control expand-input" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control expand-input" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control expand-input" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <select id="unit" name="unit" class="tooltippable form-control expand-input" data-tooltip-text="Change unit" data-tooltip-direction="bottom">
                            @foreach (var unit in units)
                            {
                                <option value="@unit.Value"
                                        @((int)Model.Unit == Int32.Parse(unit.Value) ? "selected" : "")>
                                    @unit.Text
                                </option>
                            }
                        </select>
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <select id="category" name="category" class="tooltippable form-control expand-input" data-tooltip-text="Change category" data-tooltip-direction="bottom">
                            @foreach (var cat in categories)
                            {
                                <option value="@cat.Value"
                                        @((int)Model.Category == Int32.Parse(cat.Value) ? "selected" : "")>
                                    @cat.Text
                                </option>
                            }
                        </select>
                    </div>

                </div>




                <div class="form-group">
                    <label class="control-label col-md-2" for="file">Image</label>
                    <div class="col-md-3">
                      @*  <input type="file" name="file" id="file" class=""/><br><br>*@
                        <label id="btn-file-wrapper" class="btn btn-default btn-file">
                            Choose a picture <input type="file" id="file" style="display: none;">
                        </label>
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-6">
                        <input id="submint-button" type="submit" value="update" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
        }


        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
