@using CrarftedFood.Extentions
@model Data.DTOs.EmployeeDto

@{
    ViewBag.Title = "Profile";
}

@{
    List<SelectListItem> roles = Data.Enums.Roles.Admin.CreateSelectListItem();
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ShowEmployeeViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="role" name="Role" class="tooltippable form-control" data-tooltip-text="Promeni kategoriju" data-tooltip-direction="bottom">
                    @foreach (var role in roles)
                    {
                        <option value="@role.Value"
                                @((int)Model.Role == Int32.Parse(role.Value) ? "selected" : "")>
                            @role.Text
                            </option>
                    }
                </select>
            </div>

        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
                <a href="@Url.Action("DeleteEmployee", "Employees", new {id=@Model.EmployeeId})" class="delete-confirm btn btn-danger">Delete</a>
            </div>
        </div>
    </div>}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
