@using CrarftedFood.Extentions
@model Data.DTOs.EmployeeDto

@{
    ViewBag.Title = "Employee Profile";
}

@{
    List<SelectListItem> roles = Data.Enums.Roles.Admin.CreateSelectListItem();
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
        <div id="form-wrapper" class="table text-center mdl-data-table mdl-js-data-table mdl-data-table--selectable mdl-shadow--2dp">

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.EmployeeId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control expand-input" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control expand-input" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control expand-input" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <select id="role" name="Role" class="tooltippable form-control expand-input" data-tooltip-text="Promeni kategoriju" data-tooltip-direction="bottom">
                            @foreach (var role in roles)
                            {
                                <option value="@role.Value"
                                        @((int)Model.Role == Int32.Parse(role.Value) ? "selected" : "")>
                                    @role.Text
                                </option>
                            }
                        </select>
                    </div>

                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-6">
                        <input type="submit" value="Save" class="btn btn-success btn-save"/>
                        @if (UserSession.IfAdmin() && !UserSession.CheckUserID(Model.EmployeeId))
                        {
                            <a href="@Url.Action("DeleteEmployee", "Employees", new {id=@Model.EmployeeId})" class="delete-confirm btn btn-danger" style="float: left">Delete</a>

                        }
                        <a  href="@Url.Action("Index", "Employees")" class="btn btn-default" style="float: right">Cancel</a>

                    </div>
                </div>
            </div>
        </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
